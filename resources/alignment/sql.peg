Functions = head:Expression tail:(_ expr:Expression)* _ {
      let result = [].concat(head);
      tail.forEach(elem => {
        result.push(elem[1])
      });
      return result; }

Expression
  = head:Word _ tail:Factor {
      return {function: head, parameters: tail}
    }

OptionalComplexParameter
  = "[" parameter: ComplexRequiredParameter "]" {
  	parameter.required = false;
  	return parameter;
  }

ComplexParameter
  = ComplexRequiredParameter / OptionalComplexParameter

ComplexRequiredParameter
  = parameter:Parameter array:("," _ "..." _ Parameter)? {
  	parameter.required = true;
    parameter.array = false;
    if (array) {
    	parameter.argument = parameter.argument.slice(0, -1);
        parameter.array = true;
    }
    return parameter;
  }

Parameter
  = preConstant:CONSTANT? _ argument:Argument {
      if (preConstant) {
      	argument.preConstant = preConstant
      }
      return argument;
    }

Factor
  = "(" _ head:ComplexParameter tail:(_ ComplexParameter)* _ ")" {
      let result = [].concat(head);
      tail.forEach(elem => {
        result.push(elem[1])
      });
      return result; }

Argument "argument"
  = arg:(Variable / Keyword) {return arg;}

Variable "variable"
  = [a-z0-9_*]+ { return {argument: text(), type: "variable"} }

Keyword "keyword"
  = argument:("HOUR" / "MINUTE" / "DAY" / "YEAR" / "MONTH" / "SECOND") {return {argument, type: "constant"}}

CONSTANT "constant"
  = constant:("FROM" / "PLACING" / "FOR" / "COLLATE") { return constant }

Word "word"
  = [a-zA-Z0-9_]+ { return text() }

_ "whitespace"
  = [ \t\n\r]*

